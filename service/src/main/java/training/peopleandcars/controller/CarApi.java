/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package training.peopleandcars.controller;

import training.peopleandcars.model.modelapi.Car;
import training.peopleandcars.model.modelapi.People;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-08-22T19:22:29.543238700-05:00[America/Mexico_City]")
@Validated
public interface CarApi {

    /**
     * POST /car
     * Add / Update Car
     *
     * @param car Create/Update a Car (optional)
     * @return Successful request (status code 200)
     *         or Invalid input (status code 405)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/car",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<Car> addUpdateCar(
         @Valid @RequestBody(required = false) Car car
    );


    /**
     * DELETE /car/{carVin}
     * Delete car
     *
     * @param carVin Vin of car to delete (required)
     * @return Successful request (status code 200)
     *         or Not Found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/car/{carVin}",
        produces = { "application/json" }
    )
    ResponseEntity<Car> deleteCar(
         @PathVariable("carVin") String carVin
    );


    /**
     * GET /car
     * Returns all cars from the system
     *
     * @return Successful request (status code 200)
     *         or Request not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/car",
        produces = { "application/json" }
    )
    ResponseEntity<List<Car>> getAllCars(
        
    );


    /**
     * GET /car/{carVin}/people
     * get people by car
     *
     * @param carVin Vin of car to get people (required)
     * @return Successful request (status code 200)
     *         or Request not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/car/{carVin}/people",
        produces = { "application/json" }
    )
    ResponseEntity<List<People>> getPeopleByCar(
         @PathVariable("carVin") String carVin
    );


    /**
     * GET /car/{carVin}
     * Returns car by Vin
     *
     * @param carVin Vin of car to get (required)
     * @return Successful request (status code 200)
     *         or Request not found (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/car/{carVin}",
        produces = { "application/json" }
    )
    ResponseEntity<Car> getCarByVin(
         @PathVariable("carVin") String carVin
    );

}
